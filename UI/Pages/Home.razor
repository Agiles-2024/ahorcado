@page "/"
@page "/{PalabraMock}"
@using System.Text.RegularExpressions
@using AhorcadoLibreria
@using AhorcadoLibreria.Constants
@inject NavigationManager Navigation

@code {
    [Parameter]
    public string? PalabraMock { get; set; }
    private Ahorcado juego;
    private string palabra = "";
    private string mensaje = "";
    private char letraIngresada;
    private string intentoPalabra = "";

    protected override void OnInitialized()
    {
        var palabra = PalabraMock != null ? PalabraMock : new GeneradorPalabras().GenerarPalabra();
        juego = new Ahorcado(palabra);
    }

    private void Reiniciar()
    {
        var palabra = new GeneradorPalabras().GenerarPalabra();
        juego = new Ahorcado(palabra);
        mensaje = string.Empty;
    }
    
    private void IngresarLetra()
    {
        var letterGuessed = juego.IngresarLetra(letraIngresada);

        if (juego.Resultado == EnumResultados.Ganaste)
        {
            mensaje = "¡Ganaste!";
            
            return;
        }

        if (juego.Resultado == EnumResultados.Perdiste)
        {
            mensaje = "¡Perdiste!";
            
            return;
        }


        if (letterGuessed)
        {
            mensaje = $"Letra '{letraIngresada}' encontrada!";
            letraIngresada = '\0';
        }
        else
        {
            mensaje = $"Letra '{letraIngresada}' no encontrada.";
        }
    }

    private void ArriesgarPalabra()
    {
        var resultado = juego.ArriesgarPalabra(intentoPalabra);
        intentoPalabra = "";

        switch (resultado)
        {
            case EnumResultados.Ganaste:
                mensaje = "¡Ganaste!";
                break;
            case EnumResultados.Perdiste:
                mensaje = "Palabra incorrecta. Perdiste.";
                break;
            default:
                mensaje = "El intento no es válido.";
                break;
        }
    }
}

<h3>Juego del Ahorcado</h3>
<p id="outputMsg">@mensaje</p>

<div>
    <h4>Palabra a adivinar:</h4>
    <p>
        @foreach (var letra in juego.Adivinadas)
        {
            if (letra.IsAdivinada)
                @($"{letra.Letra} ")
            else
                @("_ ")
        }
    </p>
    @switch (juego.Resultado)
    {
        case EnumResultados.Ganaste:
            <img src="./dinog.png" width="200" height="200" />
            <h4>¡Ganaste!</h4>
            break;
        case EnumResultados.Perdiste:
            <img src="./dino.png" width="200" height="200" />
            <h4>Perdiste :'(</h4>
            break;
        case EnumResultados.EnJuego:
            <h4>Ingresar Letra</h4>
            <input id="charInput" type="text" @bind="letraIngresada" maxlength="1" />
            <br />
            <br />
            <button id="tryBtn" @onclick="IngresarLetra">Probar Letra</button>
            <br />
            <br />
            <h4>Arriesgar Palabra Completa</h4>
            <input id="wordInput" type="text" @bind="intentoPalabra" />
            <br />
            <br />
            <button id="guessBtn" @onclick="ArriesgarPalabra">Arriesgar</button>
            <br />
            break;

    }

    <p>Vidas restantes: @juego.Vidas</p>
    <button @onclick="Reiniciar">Reiniciar</button>

</div>

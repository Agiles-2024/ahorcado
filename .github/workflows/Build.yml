name: Build, Test, and Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run tests with coverage
        run: |
          dotnet test --no-build --configuration Release \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults

      - name: Generate coverage report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          ~/.dotnet/tools/reportgenerator \
            -reports:TestResults/**/coverage.cobertura.xml \
            -targetdir:TestResults/CoverageReport \
            -reporttypes:Cobertura

      - name: Upload coverage report as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: TestResults/CoverageReport/Cobertura.xml

      
      - name: Run SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"agiles-2024" /o:"agiles-2024" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.cs.opencover.reportsPaths="TestResults/CoverageReport/"

          dotnet build --no-restore

          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

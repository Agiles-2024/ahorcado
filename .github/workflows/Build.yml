name: Build, Test, and Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run tests with coverage
        run: |
          dotnet test --no-build --configuration Release \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults \
          /p:CoverletOutputFormat=opencover \
          /p:CoverletOutput=./TestResults/coverage.opencover.xml \
    
      - name: Download and extract dotCover
        run: |
          curl -L -o dotCover.zip https://download.jetbrains.com/resharper/dotCover.2023.1.3/JetBrains.dotCover.CommandLineTools.2023.1.3.zip
          tar -xf dotCover.zip -C dotCover
    
      - name: Run tests with dotCover
        run: |
          # Define output paths
          $CoverageOutput = "coverage.dcvr"
          $ReportOutput = "coverage.html"
          
          # Run dotCover to collect coverage and generate report
          ./dotCover/dotCover.exe cover --output=$CoverageOutput --reportType=HTML --report=$ReportOutput --scope=ProjectName -- dotnet test

      - name: Run SonarCloud analysis
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dsonar.projectKey=agiles-2024
            -Dsonar.organization=agiles-2024
            -Dsonar.cs.opencover.reportsPaths=TestResults/**/coverage.cobertura.xml
            -Dsonar.cs.dotCover.reportsPaths=coverage.html
            -Dsonar.verbose=true
